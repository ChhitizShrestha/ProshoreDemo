// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WebAppDemo.ServiceDefaults.Models;

public partial class testxluploadContext : DbContext
{
    public testxluploadContext(DbContextOptions<testxluploadContext> options)
        : base(options)
    {
    }

    public virtual DbSet<BusinessUnit> BusinessUnits { get; set; }

    public virtual DbSet<BusinessUnitPriceDataSource> BusinessUnitPriceDataSources { get; set; }

    public virtual DbSet<DataSource> DataSources { get; set; }

    public virtual DbSet<DhhBestmixItem> DhhBestmixItems { get; set; }

    public virtual DbSet<DhhBestmixItemLink> DhhBestmixItemLinks { get; set; }

    public virtual DbSet<DhhBusinessStructure> DhhBusinessStructures { get; set; }

    public virtual DbSet<DhhBusinessStructureProductionArea> DhhBusinessStructureProductionAreas { get; set; }

    public virtual DbSet<DhhCountry> DhhCountries { get; set; }

    public virtual DbSet<DhhItem1> DhhItems1 { get; set; }

    public virtual DbSet<DhhPriceTypeConfiguration> DhhPriceTypeConfigurations { get; set; }

    public virtual DbSet<DhhProductionArea> DhhProductionAreas { get; set; }

    public virtual DbSet<Dhhdatum> Dhhdata { get; set; }

    public virtual DbSet<Dhhitem> Dhhitems { get; set; }

    public virtual DbSet<IntHistoricPurchasePrice> IntHistoricPurchasePrices { get; set; }

    public virtual DbSet<Job> Jobs { get; set; }

    public virtual DbSet<JobStatus> JobStatuses { get; set; }

    public virtual DbSet<JobType> JobTypes { get; set; }

    public virtual DbSet<PriceType> PriceTypes { get; set; }

    public virtual DbSet<System> Systems { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<XlpurchasePrice> XlpurchasePrices { get; set; }

    public virtual DbSet<XlpurchasePricesCurrencyCode> XlpurchasePricesCurrencyCodes { get; set; }

    public virtual DbSet<XlpurchasePricesCurrencyValue> XlpurchasePricesCurrencyValues { get; set; }

    public virtual DbSet<XlpurchasePricesProductionAreasTemp> XlpurchasePricesProductionAreasTemps { get; set; }

    public virtual DbSet<XlpurchasePricesTemp> XlpurchasePricesTemps { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<BusinessUnit>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_XLPP_BusinessUnits_Id");

            entity.ToTable("BusinessUnits", "XLPP");

            entity.HasIndex(e => e.BusinessStructureId, "UQ_XLPP_BusinessUnits_BusinessStructureId").IsUnique();

            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(254)
                .HasDefaultValueSql("(suser_sname())");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ModifiedBy)
                .IsRequired()
                .HasMaxLength(254)
                .HasDefaultValueSql("(suser_sname())");
        });

        modelBuilder.Entity<BusinessUnitPriceDataSource>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Business__3214EC278A86836B");

            entity.ToTable("BusinessUnitPriceDataSource");

            entity.HasIndex(e => new { e.BusinessUnitId, e.PriceTypeId, e.DataSourceId }, "UQ__Business__4B9117814E22B706").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BusinessUnitId).HasColumnName("BusinessUnitID");
            entity.Property(e => e.DataSourceId).HasColumnName("DataSourceID");
            entity.Property(e => e.ExportFilepath)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("export_filepath");
            entity.Property(e => e.Notification)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("notification");
            entity.Property(e => e.PriceTypeId).HasColumnName("PriceTypeID");
        });

        modelBuilder.Entity<DataSource>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DataSour__3214EC27B43188EE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Description).HasColumnType("text");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<DhhBestmixItem>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("dhh_BestmixItems", "XLPP");
        });

        modelBuilder.Entity<DhhBestmixItemLink>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("dhh_BestmixItemLinks", "XLPP");
        });

        modelBuilder.Entity<DhhBusinessStructure>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("dhh_BusinessStructures", "XLPP");

            entity.Property(e => e.BusinessUnitId).HasColumnName("BusinessUnitID");
            entity.Property(e => e.Dhpversion).HasColumnName("DHPVersion");
            entity.Property(e => e.IsDhc).HasColumnName("IsDHC");
            entity.Property(e => e.IsDhh).HasColumnName("IsDHH");
            entity.Property(e => e.IsDhp).HasColumnName("IsDHP");
        });

        modelBuilder.Entity<DhhBusinessStructureProductionArea>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("dhh_BusinessStructureProductionAreas", "XLPP");
        });

        modelBuilder.Entity<DhhCountry>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("dhh_Countries", "XLPP");

            entity.Property(e => e.TwoLettersIsocode).HasColumnName("TwoLettersISOCode");
        });

        modelBuilder.Entity<DhhItem1>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("dhh_Items", "XLPP");
        });

        modelBuilder.Entity<DhhPriceTypeConfiguration>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("dhh_PriceTypeConfigurations", "XLPP");

            entity.Property(e => e.CreateDate).HasColumnType("datetime");
            entity.Property(e => e.UpdateDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<DhhProductionArea>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("dhh_ProductionAreas", "XLPP");
        });

        modelBuilder.Entity<Dhhdatum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("dhhdata");

            entity.Property(e => e.LegacyPriceType)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.PriceType).IsRequired();
        });

        modelBuilder.Entity<Dhhitem>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("dhhitems");

            entity.Property(e => e.GlobalCodes).HasColumnName("Global Codes");
            entity.Property(e => e.IngredientNumber).HasColumnName("Ingredient Number");
            entity.Property(e => e.ProductName).HasColumnName("Product Name");
            entity.Property(e => e.Responsible).HasMaxLength(400);
        });

        modelBuilder.Entity<IntHistoricPurchasePrice>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.HistoricPurchasePriceKey).HasColumnName("HistoricPurchasePrice_Key");
            entity.Property(e => e.Timestamp).HasColumnType("datetime");
        });

        modelBuilder.Entity<Job>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_XLPP_Jobs_Id");

            entity.ToTable("Jobs", "XLPP");

            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(254)
                .HasDefaultValueSql("(suser_sname())");
            entity.Property(e => e.DataSourceId).HasColumnName("DataSourceID");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.ExecutionId).HasMaxLength(254);
            entity.Property(e => e.ExecutionStatus).HasMaxLength(128);
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ModifiedBy)
                .IsRequired()
                .HasMaxLength(254)
                .HasDefaultValueSql("(suser_sname())");
            entity.Property(e => e.PriceTypeId).HasColumnName("PriceTypeID");
            entity.Property(e => e.StartDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.BusinessUnit).WithMany(p => p.Jobs)
                .HasForeignKey(d => d.BusinessUnitId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_XLPP_Jobs_BusinessUnitId");

            entity.HasOne(d => d.JobStatus).WithMany(p => p.Jobs)
                .HasForeignKey(d => d.JobStatusId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_XLPP_Jobs_JobStatusId");

            entity.HasOne(d => d.JobType).WithMany(p => p.Jobs)
                .HasForeignKey(d => d.JobTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_XLPP_Jobs_JobTypeId");
        });

        modelBuilder.Entity<JobStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_XLPP_JobStatus_Id");

            entity.ToTable("JobStatus", "XLPP");

            entity.HasIndex(e => e.Name, "UQ_XLPP_JobStatus_Name").IsUnique();

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(150);
        });

        modelBuilder.Entity<JobType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_XLPP_JobType_Id");

            entity.ToTable("JobType", "XLPP");

            entity.HasIndex(e => e.Name, "UQ_XLPP_JobType_Name").IsUnique();

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(150);
        });

        modelBuilder.Entity<PriceType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PriceTyp__3214EC27D84BC34D");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Description).HasColumnType("text");
            entity.Property(e => e.LegacyPricetype).HasColumnName("legacy_pricetype");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ParamPage)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("param_page");
            entity.Property(e => e.ParamPricetype)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("param_pricetype");
        });

        modelBuilder.Entity<System>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_XLPP_Systems_Id");

            entity.ToTable("Systems", "XLPP");

            entity.HasIndex(e => new { e.Name, e.BusinessStructureId }, "UQ_XLPP_Systems_Name_BusinessStructureId").IsUnique();

            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(254)
                .HasDefaultValueSql("(suser_sname())");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ModifiedBy)
                .IsRequired()
                .HasMaxLength(254)
                .HasDefaultValueSql("(suser_sname())");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(150);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_XLPP_Users_Id");

            entity.ToTable("Users", "XLPP");

            entity.HasIndex(e => e.Username, "UQ_XLPP_Users_Username").IsUnique();

            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(254)
                .HasDefaultValueSql("(suser_sname())");
            entity.Property(e => e.LastAccessDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Modified)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ModifiedBy)
                .IsRequired()
                .HasMaxLength(254)
                .HasDefaultValueSql("(suser_sname())");
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(254);

            entity.HasOne(d => d.DefaultBusinessUnit).WithMany(p => p.Users)
                .HasForeignKey(d => d.DefaultBusinessUnitId)
                .HasConstraintName("FK_XLPP_Users_DefaultBusinessUnitId");
        });

        modelBuilder.Entity<XlpurchasePrice>(entity =>
        {
            entity.ToTable("XLPurchasePrices");

            entity.HasIndex(e => e.WeekNumberDate, "NC_XLPurchasePrices_WeekNumberDate");

            entity.Property(e => e.XlpurchasePriceId)
                .ValueGeneratedNever()
                .HasColumnName("XLPurchasePrice_id");
            entity.Property(e => e.BusinessUnitName).IsRequired();
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CurrencyCode)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.FileName)
                .IsRequired()
                .HasMaxLength(260);
            entity.Property(e => e.GlobalCode)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ItemCode)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.LegacyPriceType)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.PriceTypeName)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.PriceValue).HasColumnType("decimal(18, 4)");
            entity.Property(e => e.ProductionAreaName).IsRequired();
            entity.Property(e => e.Responsible).HasMaxLength(400);
            entity.Property(e => e.WeekNumber)
                .IsRequired()
                .HasMaxLength(7)
                .IsFixedLength();
            entity.Property(e => e.YearMonth)
                .IsRequired()
                .HasMaxLength(7)
                .IsFixedLength();
        });

        modelBuilder.Entity<XlpurchasePricesCurrencyCode>(entity =>
        {
            entity.HasKey(e => e.XlpurchasePricesCurrencyCodeId).HasName("PK_XLPurchasePrices_CurrencyCodes");

            entity.ToTable("XLPurchasePricesCurrencyCodes");

            entity.Property(e => e.XlpurchasePricesCurrencyCodeId).HasColumnName("XLPurchasePricesCurrencyCode_id");
            entity.Property(e => e.CurrencyCode)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.CurrencyName)
                .IsRequired()
                .HasMaxLength(200);
        });

        modelBuilder.Entity<XlpurchasePricesCurrencyValue>(entity =>
        {
            entity.ToTable("XLPurchasePricesCurrencyValues");

            entity.Property(e => e.XlpurchasePricesCurrencyValueId).HasColumnName("XLPurchasePricesCurrencyValue_id");
            entity.Property(e => e.LastCloseDate).HasColumnType("datetime");
            entity.Property(e => e.SourceCurrency)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.TargetCurrency)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.Value).HasColumnType("decimal(18, 6)");
        });

        modelBuilder.Entity<XlpurchasePricesProductionAreasTemp>(entity =>
        {
            entity.HasKey(e => e.XlpurchasePricesProductionAreaId);

            entity.ToTable("XLPurchasePricesProductionAreas_Temp");

            entity.HasIndex(e => e.FileName, "IX_XLPurchasePricesProductionAreas_Temp_FileName");

            entity.Property(e => e.XlpurchasePricesProductionAreaId).HasColumnName("XLPurchasePricesProductionArea_id");
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.FileName)
                .IsRequired()
                .HasMaxLength(260);
            entity.Property(e => e.ProductionAreaName).IsRequired();
        });

        modelBuilder.Entity<XlpurchasePricesTemp>(entity =>
        {
            entity.HasKey(e => e.XlpurchasePriceId);

            entity.ToTable("XLPurchasePrices_Temp");

            entity.HasIndex(e => e.FileName, "IX_XLPurchasePrices_Temp_FileName");

            entity.Property(e => e.XlpurchasePriceId)
                .ValueGeneratedNever()
                .HasColumnName("XLPurchasePrice_id");
            entity.Property(e => e.BusinessUnitName).IsRequired();
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CurrencyCode)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.FileName)
                .IsRequired()
                .HasMaxLength(260);
            entity.Property(e => e.GlobalCode)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ItemCode)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.LegacyPriceType)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.PriceTypeName)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.PriceValue).HasColumnType("decimal(18, 4)");
            entity.Property(e => e.ProductionAreaName).IsRequired();
            entity.Property(e => e.Responsible).HasMaxLength(400);
            entity.Property(e => e.WeekNumber)
                .IsRequired()
                .HasMaxLength(7)
                .IsFixedLength();
            entity.Property(e => e.YearMonth)
                .IsRequired()
                .HasMaxLength(7)
                .IsFixedLength();
        });

        OnModelCreatingGeneratedFunctions(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}